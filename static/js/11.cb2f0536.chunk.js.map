{"version":3,"sources":["components/Dvds/DvdDetail.js","components/Idols/BestIdolCard.js","components/Idols/BestIdolDetail.js","containers/Idols/BestIdols.js"],"names":["Container","styled","div","center","props","show","uncensored","DarkBlue","LightBlue","Pink","Orange","fadeIn","PosterDvd","DvdPoster","DetailContainer","CodeDvd","span","Black","XXLarge","Title","White","Large","IdolsContainer","TagIdol","IdolTag","queen","Yellow","Red","runnerUp","MemoDvdDetail","memo","toggleModal","data","hiddenModal","get","src","map","item","idIdol","key","name","to","style","textDecoration","color","getIdolRank","AvatarContainer","active","AvatarIdol","IdolAvatar","MemoBestIdolCard","avatar","RankingIdol","IdolInformationContainer","NameIdol","InformationIdol","StylesIdolContainer","StyleIdol","IdolStyle","DvdsContainer","DvdItem","Regular","Grey","Points","ViewProfile","Link","runner","MemoBestIdolDetail","useState","setShow","dvd","setDvd","dvds","useMemo","filter","index","length","reverse","dvdPoints","points","useCallback","handleChangeDvd","value","rank","display","width","toString","other","born","age","height","breast","IdolCup","cup","waist","hips","styles","tag","idDvd","onClick","poster","type","code","DvdDetail","WaterWheelSliderContainer","BestIdols","highlight","setHighlight","BEST_IDOLS","changeHighlight","onSelect","customColor"],"mappings":"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","file":"static/js/11.cb2f0536.chunk.js","sourcesContent":["import React, { Fragment, memo } from \"react\";\r\nimport { get } from \"lodash\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getIdolRank } from \"../../services/common.service\";\r\nimport Backdrop from \"../UI/Backdrop/Backdrop\";\r\nimport DvdPoster from \"./DvdPoster\";\r\nimport IdolTag from \"../Idols/IdolTag\";\r\n\r\nimport {\r\n  Pink,\r\n  White,\r\n  Orange,\r\n  Black,\r\n  DarkBlue,\r\n  LightBlue,\r\n  Yellow,\r\n  Red,\r\n} from \"../../themes/colors\";\r\nimport { center, fadeIn } from \"../../themes/styled\";\r\nimport { Large, XXLarge } from \"../../themes/font\";\r\n\r\nconst Container = styled.div`\r\n  position: fixed;\r\n  z-index: 300;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  ${center}\r\n  display: ${(props) => (props.show ? \"flex\" : \"none\")};\r\n  padding: 10px;\r\n  background: ${(props) =>\r\n    props.uncensored\r\n      ? `linear-gradient(to right, ${DarkBlue}, ${LightBlue})`\r\n      : `linear-gradient(to right, ${Pink}, ${Orange})`};\r\n  animation: ${fadeIn} 0.3s ease-in-out;\r\n`;\r\n\r\nconst PosterDvd = styled(DvdPoster)`\r\n  width: 36vw;\r\n  height: 24vw;\r\n`;\r\n\r\nconst DetailContainer = styled.div`\r\n  width: 36vw;\r\n  height: calc(24vw + 6px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 10px 10px 10px 20px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst CodeDvd = styled.span`\r\n  color: ${Black};\r\n  font-size: ${XXLarge};\r\n`;\r\n\r\nconst Title = styled.div`\r\n  color: ${White};\r\n  font-size: ${Large};\r\n`;\r\n\r\nconst IdolsContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst TagIdol = styled(IdolTag)`\r\n  border: solid 2px ${Black};\r\n  margin-top: 10px;\r\n  background: ${(props) =>\r\n    props.queen\r\n      ? `linear-gradient(to right, ${Yellow}, ${Red})`\r\n      : props.runnerUp\r\n      ? `linear-gradient(to right, ${LightBlue}, ${Pink})`\r\n      : `linear-gradient(to right,  ${Orange}, ${Pink})`};\r\n`;\r\n\r\nfunction DvdDetail({ show, toggleModal, data }) {\r\n  return (\r\n    <Fragment>\r\n      <Backdrop show={show} hiddenModal={toggleModal} />\r\n      <Container\r\n        show={show}\r\n        uncensored={get(data, \"type\", \"\") === \"Uncensored\"}\r\n      >\r\n        <PosterDvd src={get(data, \"poster\", null)} />\r\n        <DetailContainer>\r\n          <div>\r\n            <CodeDvd>{get(data, \"code\", \"\")}</CodeDvd>\r\n          </div>\r\n          <Title>{get(data, \"title\", \"\")}</Title>\r\n          <IdolsContainer>\r\n            {get(data, \"idols\", []).map((item) =>\r\n              item.idIdol === \"jai000\" ? (\r\n                <TagIdol key={item.idIdol} name={item.name} />\r\n              ) : (\r\n                <Link\r\n                  key={item.idIdol}\r\n                  to={`/idol/${item.idIdol}`}\r\n                  style={{ textDecoration: \"none\", color: Black }}\r\n                >\r\n                  <TagIdol\r\n                    key={item.idIdol}\r\n                    queen={getIdolRank(item.idIdol) === 1}\r\n                    runnerUp={getIdolRank(item.idIdol) === 2}\r\n                    name={item.name}\r\n                  />\r\n                </Link>\r\n              )\r\n            )}\r\n          </IdolsContainer>\r\n        </DetailContainer>\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst MemoDvdDetail = memo(DvdDetail);\r\n\r\nexport default MemoDvdDetail;\r\n","import React, { memo } from \"react\";\r\nimport { get } from \"lodash\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { getIdolRank } from \"../../services/common.service\";\r\nimport IdolAvatar from \"../Idols/IdolAvatar\";\r\n\r\nimport { Pink, Orange, LightBlue, Yellow, Red } from \"../../themes/colors\";\r\nimport { center } from \"../../themes/styled\";\r\nimport { Large } from \"../../themes/font\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  position: relative;\r\n  cursor: pointer;\r\n  width: 14vw;\r\n  height: calc(19.25vw + 40px);\r\n`;\r\n\r\nconst AvatarContainer = styled.div`\r\n  ${center}\r\n  width: calc(14vw + 6px);\r\n  height: calc(19.25vw + 6px);\r\n  background: ${(props) =>\r\n    props.active\r\n      ? props.queen\r\n        ? `linear-gradient(to right, ${Yellow}, ${Red})`\r\n        : props.runnerUp\r\n        ? `linear-gradient(to right, ${LightBlue}, ${Pink})`\r\n        : `linear-gradient(to right,  ${Orange}, ${Pink})`\r\n      : \"transparent\"};\r\n  border-radius: 18px;\r\n`;\r\n\r\nconst AvatarIdol = styled(IdolAvatar)`\r\n  width: 14vw;\r\n  height: 19.25vw;\r\n  border-radius: 18px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst CodeDvd = styled.div`\r\n  margin-top: 10px;\r\n  font-size: ${Large};\r\n  background: ${(props) =>\r\n    props.queen\r\n      ? `linear-gradient(to right, ${Yellow}, ${Red})`\r\n      : props.runnerUp\r\n      ? `linear-gradient(to right, ${LightBlue}, ${Pink})`\r\n      : `linear-gradient(to right,  ${Orange}, ${Pink})`};\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n`;\r\n\r\nfunction BestIdolCard({ data, active }) {\r\n  return (\r\n    <Container>\r\n      <AvatarContainer\r\n        active={active}\r\n        queen={getIdolRank(get(data, \"idIdol\", \"\")) === 1}\r\n        runnerUp={getIdolRank(get(data, \"idIdol\", \"\")) === 2}\r\n      >\r\n        <AvatarIdol src={data.avatar} />\r\n      </AvatarContainer>\r\n      <CodeDvd\r\n        queen={getIdolRank(get(data, \"idIdol\", \"\")) === 1}\r\n        runnerUp={getIdolRank(get(data, \"idIdol\", \"\")) === 2}\r\n      >\r\n        {data.name}\r\n      </CodeDvd>\r\n    </Container>\r\n  );\r\n}\r\n\r\nconst MemoBestIdolCard = memo(BestIdolCard);\r\n\r\nexport default MemoBestIdolCard;\r\n","import React, { Fragment, memo, useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { dvdPoints } from \"../../helpers/render-color\";\r\nimport { getIdolRank } from \"../../services/common.service\";\r\nimport IdolAvatar from \"./IdolAvatar\";\r\nimport IdolCup from \"./IdolCup\";\r\nimport IdolStyle from \"./IdolStyle\";\r\nimport DvdPoster from \"../Dvds/DvdPoster\";\r\nimport DvdDetail from \"../Dvds/DvdDetail\";\r\n\r\nimport {\r\n  Black,\r\n  Pink,\r\n  Orange,\r\n  White,\r\n  Yellow,\r\n  LightBlue,\r\n  Grey,\r\n  Red,\r\n} from \"../../themes/colors\";\r\nimport { center, fadeIn } from \"../../themes/styled\";\r\nimport { Regular, XXLarge } from \"../../themes/font\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  border-radius: 18px;\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  background: ${(props) =>\r\n    props.queen\r\n      ? `linear-gradient(to right, ${Yellow}, ${Red})`\r\n      : props.runnerUp\r\n      ? `linear-gradient(to right, ${LightBlue}, ${Pink})`\r\n      : `linear-gradient(to right,  ${Orange}, ${Pink})`};\r\n  animation: ${fadeIn} 1s linear;\r\n`;\r\n\r\nconst RankingIdol = styled.div`\r\n  ${center}\r\n  align-self: center;\r\n  width: 50px;\r\n  min-width: 50px;\r\n  height: 50px;\r\n  border: solid 3px ${Black};\r\n  border-radius: 50px;\r\n  margin-right: 10px;\r\n  box-sizing: border-box;\r\n  background-color: ${White};\r\n  color: ${Black};\r\n  font-size: ${XXLarge};\r\n`;\r\n\r\nconst AvatarContainer = styled.div`\r\n  position: relative;\r\n  width: 10vw;\r\n  height: 15vw;\r\n`;\r\n\r\nconst AvatarIdol = styled(IdolAvatar)`\r\n  width: 10vw;\r\n  min-width: 10vw;\r\n  height: 15vw;\r\n  border-radius: 18px;\r\n  object-fit: cover;\r\n`;\r\n\r\nconst IdolInformationContainer = styled.div`\r\n  position: relative;\r\n  width: 450px;\r\n  min-width: 450px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst NameIdol = styled.div`\r\n  color: ${Black};\r\n  font-size: ${XXLarge};\r\n`;\r\n\r\nconst InformationIdol = styled.div`\r\n  color: ${White};\r\n`;\r\n\r\nconst StylesIdolContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst StyleIdol = styled(IdolStyle)`\r\n  border: solid 2px ${Black};\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst DvdsContainer = styled.div`\r\n  width: auto;\r\n  display: flex;\r\n  align-items: flex-start;\r\n  justify-content: flex-start;\r\n  flex-wrap: wrap;\r\n  margin-right: 10px;\r\n`;\r\n\r\nconst DvdItem = styled.div`\r\n  ${center}\r\n  flex-direction: column;\r\n  margin: 5px;\r\n  cursor: pointer;\r\n  transform: translateY(0px);\r\n  transition: transform 0.3s ease-in-out;\r\n\r\n  &:hover {\r\n    transform: translateY(-10px);\r\n  }\r\n`;\r\n\r\nconst PosterDvd = styled(DvdPoster)`\r\n  width: 7.5vw;\r\n  max-width: 7.5vw;\r\n  height: 5vw;\r\n  max-height: 5vw;\r\n`;\r\n\r\nconst CodeDvd = styled.div`\r\n  margin-top: 5px;\r\n  font-size: ${Regular};\r\n  color: ${(props) => (props.uncensored ? Grey : Black)};\r\n`;\r\n\r\nconst Points = styled.div`\r\n  ${center}\r\n  width: 90px;\r\n  min-width: 90px;\r\n  height: auto;\r\n  margin: -10px -10px -10px 0px;\r\n  border-radius: 0px 18px 18px 0px;\r\n  box-sizing: border-box;\r\n  background-color: ${White};\r\n  color: ${(props) => props.color};\r\n  font-size: ${XXLarge};\r\n  -webkit-text-stroke-width: 2px;\r\n  -webkit-text-stroke-color: ${Black};\r\n`;\r\n\r\nconst ViewProfile = styled(Link)`\r\n  position: absolute;\r\n  bottom: 0px;\r\n  ${center}\r\n  width: 10vw;\r\n  height: 0px;\r\n  overflow: hidden;\r\n  border-radius: 0px 0px 18px 18px;\r\n  box-sizing: border-box;\r\n  background: ${(props) =>\r\n    props.queen === \"true\"\r\n      ? `linear-gradient(to right, ${Yellow}, ${Red})`\r\n      : props.runner === \"true\"\r\n      ? `linear-gradient(to right, ${LightBlue}, ${Pink})`\r\n      : `linear-gradient(to right,  ${Orange}, ${Pink})`};\r\n  text-decoration: none;\r\n  color: ${Black};\r\n  font-size: ${Regular};\r\n  transition: height 0.3s ease-in-out;\r\n\r\n  ${Container}:hover & {\r\n    height: 30px;\r\n    border: solid 1px ${Black};\r\n  }\r\n`;\r\n\r\nfunction BestIdolDetail({ data, active }) {\r\n  const [show, setShow] = useState(false);\r\n  const [dvd, setDvd] = useState(null);\r\n\r\n  const dvds = useMemo(\r\n    () =>\r\n      data.dvds\r\n        .filter((item, index) => index > data.dvds.length - 13)\r\n        .reverse(),\r\n    [data.dvds]\r\n  );\r\n\r\n  const color = useMemo(() => dvdPoints(data.points), [data.points]);\r\n\r\n  const toggleModal = useCallback(() => {\r\n    setShow(!show);\r\n  }, [show]);\r\n\r\n  const handleChangeDvd = useCallback(\r\n    (value) => {\r\n      if (value) {\r\n        setDvd(value);\r\n      } else {\r\n        setDvd(null);\r\n      }\r\n      toggleModal();\r\n    },\r\n    [toggleModal]\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      {active && (\r\n        <Container queen={data.rank === 1} runnerUp={data.rank === 2}>\r\n          <RankingIdol>{data.rank}</RankingIdol>\r\n          <div style={{ display: \"flex\", width: \"100%\" }}>\r\n            <AvatarContainer>\r\n              <AvatarIdol src={data.avatar} />\r\n              <ViewProfile\r\n                to={`/idol/${data.idIdol}`}\r\n                queen={(getIdolRank(data.idIdol) === 1).toString()}\r\n                runner={(getIdolRank(data.idIdol) === 2).toString()}\r\n              >\r\n                View\r\n              </ViewProfile>\r\n            </AvatarContainer>\r\n            <IdolInformationContainer>\r\n              <NameIdol>\r\n                {data.name} {data.other ? `(${data.other})` : \"\"}\r\n              </NameIdol>\r\n              <InformationIdol>\r\n                ● Born: {data.born} ({data.age} year olds)\r\n                <br />● Height: {data.height}\r\n                <br />● Breast: {data.breast}{\" \"}\r\n                <IdolCup cup={data.cup}>({data.cup})</IdolCup>\r\n                <br />● Waist: {data.waist}\r\n                <br />● Hips: {data.hips}\r\n              </InformationIdol>\r\n              <StylesIdolContainer>\r\n                {data.styles.map((item) => (\r\n                  <StyleIdol key={item.tag} tag={item.tag} />\r\n                ))}\r\n              </StylesIdolContainer>\r\n            </IdolInformationContainer>\r\n            <DvdsContainer>\r\n              {dvds.map((item) => (\r\n                <DvdItem key={item.idDvd} onClick={() => handleChangeDvd(item)}>\r\n                  <PosterDvd src={item.poster} />\r\n                  <CodeDvd uncensored={item.type === \"Uncensored\"}>\r\n                    {item.code}\r\n                  </CodeDvd>\r\n                </DvdItem>\r\n              ))}\r\n            </DvdsContainer>\r\n          </div>\r\n          <Points color={color}>{data.points}p</Points>\r\n        </Container>\r\n      )}\r\n      <DvdDetail show={show} toggleModal={toggleModal} data={dvd} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nconst MemoBestIdolDetail = memo(BestIdolDetail);\r\n\r\nexport default MemoBestIdolDetail;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { getIdolRank } from \"../../services/common.service\";\r\nimport { BEST_IDOLS } from \"../../services/idols.service\";\r\nimport WaterWheelSlider from \"../../components/UI/Slider/WaterWheelSlider/Slider\";\r\nimport BestIdolCard from \"../../components/Idols/BestIdolCard\";\r\nimport BestIdolDetail from \"../../components/Idols/BestIdolDetail\";\r\n\r\nimport { Pink, Orange, LightBlue, Yellow, Red } from \"../../themes/colors\";\r\nimport { center, fadeIn } from \"../../themes/styled\";\r\n\r\nconst Container = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px 0px;\r\n  box-sizing: border-box;\r\n  animation: ${fadeIn} 0.8s ease-in-out;\r\n`;\r\n\r\nconst WaterWheelSliderContainer = styled.div`\r\n  width: calc(14vw + 800px);\r\n  height: calc(19.25vw + 100px);\r\n`;\r\n\r\nconst DetailContainer = styled.div`\r\n  ${center}\r\n  width: calc(100vw - 40px);\r\n  margin-top: 20px;\r\n`;\r\n\r\nfunction BestIdols() {\r\n  const [highlight, setHighlight] = useState(0);\r\n\r\n  const data = useMemo(() => {\r\n    return BEST_IDOLS || [];\r\n  }, []);\r\n\r\n  const changeHighlight = useCallback(value => {\r\n    setHighlight(value);\r\n  }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <WaterWheelSliderContainer>\r\n        <WaterWheelSlider\r\n          highlight={highlight}\r\n          width={\"14vw\"}\r\n          height={\"calc(19.25vw + 40px)\"}\r\n          onSelect={changeHighlight}\r\n          customColor={\r\n            getIdolRank(data[highlight].idIdol) === 1\r\n              ? `linear-gradient(to right, ${Yellow}, ${Red})`\r\n              : getIdolRank(data[highlight].idIdol) === 2\r\n              ? `linear-gradient(to right, ${LightBlue}, ${Pink})`\r\n              : `linear-gradient(to right,  ${Orange}, ${Pink})`\r\n          }\r\n        >\r\n          {data.map((item, index) => (\r\n            <BestIdolCard\r\n              key={item.idIdol}\r\n              data={item}\r\n              active={index === highlight}\r\n            />\r\n          ))}\r\n        </WaterWheelSlider>\r\n      </WaterWheelSliderContainer>\r\n      <DetailContainer>\r\n        {data.map((item, index) => (\r\n          <BestIdolDetail\r\n            key={item.idIdol}\r\n            data={item}\r\n            active={index === highlight}\r\n          />\r\n        ))}\r\n      </DetailContainer>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default BestIdols;\r\n"],"sourceRoot":""}