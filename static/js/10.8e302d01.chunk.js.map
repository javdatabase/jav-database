{"version":3,"sources":["components/UI/Pagination/Pagination.js","components/Dvds/DvdCard.js","containers/Dvds/Dvds.js"],"names":["Container","styled","div","PageContainer","Orange","Pink","PageItem","center","props","active","White","Regular","PageOtherItem","Pagination","count","page","size","handleChangePage","pageContainerRef","useRef","pages","useMemo","Array","Math","ceil","fill","map","item","index","handleChange","useCallback","value","auto","scroll","length","current","scrollTo","onClick","ref","key","PosterDvd","DvdPoster","CodeDvd","Large","uncensored","DarkBlue","LightBlue","MemoDvdCard","memo","data","click","src","poster","type","code","DvdContainer","DvdItem","fadeIn","PaginationContainer","NotFound","Dvds","useState","setPage","show","setShow","setData","dvds","ALL_DVDS_RELEASE_DETAIL_BY_PAGE","toggleModal","handleChangeData","SIZE_MAIN_DVDS","height","once","overflow"],"mappings":"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","file":"static/js/10.8e302d01.chunk.js","sourcesContent":["import React, { useMemo, useCallback, useRef } from \"react\";\nimport styled from \"styled-components\";\n\nimport { White, Pink, Orange } from \"../../../themes/colors\";\nimport { center } from \"../../../themes/styled\";\nimport { Regular } from \"../../../themes/font\";\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  width: 350px;\n  overflow: hidden;\n  position: relative;\n`;\n\nconst PageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 50px;\n  margin: 0px 2.5px;\n  overflow-x: auto;\n\n  &::-webkit-scrollbar {\n    height: 6px;\n    background: transparent;\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: linear-gradient(${Orange}, ${Pink});\n    border-radius: 10px;\n  }\n`;\n\nconst PageItem = styled.div`\n  ${center}\n  width: 25px;\n  min-width: 30px;\n  height: 30px;\n  border-radius: 30px;\n  margin: 5px 2.5px;\n  cursor: ${props => (props.active ? \"default\" : \"pointer\")};\n  background: ${props =>\n    props.active\n      ? `linear-gradient(to right, ${Pink}, ${Orange})`\n      : \"transparent\"};\n  color: ${White};\n  font-size: ${Regular};\n  font-weight: 500;\n\n  ${props =>\n    props.active\n      ? \"\"\n      : `&:hover {\n    background: linear-gradient(to right, ${Pink}, ${Orange});\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }`}\n`;\n\nconst PageOtherItem = styled(PageItem)`\n  margin-top: -2.5px;\n`;\n\nfunction Pagination({ count, page, size, handleChangePage }) {\n  const pageContainerRef = useRef();\n\n  const pages = useMemo(() => {\n    const result = Array(Math.ceil(count / size))\n      .fill(0)\n      .map((item, index) => index + 1);\n    return result;\n  }, [count, size]);\n\n  const handleChange = useCallback(\n    (value, auto = false) => {\n      let scroll = 0;\n      if (value < 1 || value > pages.length) {\n        handleChangePage(page);\n        scroll = (page - 1) * 35;\n      } else {\n        handleChangePage(value);\n        scroll = (value - 1) * 35;\n      }\n      if (auto) {\n        pageContainerRef.current.scrollTo(scroll, 0);\n      }\n    },\n    [pages, page, handleChangePage]\n  );\n\n  return (\n    <Container>\n      <PageOtherItem\n        onClick={() => handleChange(1, true)}\n      >{`<<`}</PageOtherItem>\n      <PageOtherItem\n        onClick={() => handleChange(page - 1, true)}\n      >{`<`}</PageOtherItem>\n      <PageContainer ref={pageContainerRef}>\n        {pages.map(item => (\n          <PageItem\n            key={`page-${item}`}\n            active={item === page}\n            onClick={() => handleChange(item)}\n          >\n            {item}\n          </PageItem>\n        ))}\n      </PageContainer>\n      <PageOtherItem\n        onClick={() => handleChange(page + 1, true)}\n      >{`>`}</PageOtherItem>\n      <PageOtherItem\n        onClick={() => handleChange(pages.length, true)}\n      >{`>>`}</PageOtherItem>\n    </Container>\n  );\n}\n\nexport default Pagination;\n","import React, { memo } from \"react\";\nimport styled from \"styled-components\";\n\nimport DvdPoster from \"./DvdPoster\";\n\nimport { Pink, Orange, DarkBlue, LightBlue } from \"../../themes/colors\";\nimport { center } from \"../../themes/styled\";\nimport { Large } from \"../../themes/font\";\n\nconst Container = styled.div`\n  ${center}\n  flex-direction: column;\n  cursor: pointer;\n  width: 15vw;\n  height: calc(10vw + 50px);\n  transform: translateY(0px);\n  transition: transform 0.3s ease-in-out;\n\n  &:hover {\n    transform: translateY(-20px);\n  }\n`;\n\nconst PosterDvd = styled(DvdPoster)`\n  width: 15vw;\n  height: 10vw;\n  object-fit: cover;\n`;\n\nconst CodeDvd = styled.div`\n  margin-top: 10px;\n  font-size: ${Large};\n  background: ${props =>\n    props.uncensored\n      ? `linear-gradient(to right, ${DarkBlue}, ${LightBlue})`\n      : `linear-gradient(to right, ${Pink}, ${Orange})`};\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`;\n\nfunction DvdCard({ data, click }) {\n  return (\n    <Container onClick={click}>\n      <PosterDvd src={data.poster} />\n      <CodeDvd uncensored={data.type === \"Uncensored\"}>{data.code}</CodeDvd>\n    </Container>\n  );\n}\n\nconst MemoDvdCard = memo(DvdCard);\n\nexport default MemoDvdCard;\n","import React, { Fragment, useState, useMemo, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport LazyLoad from \"react-lazyload\";\n\nimport {\n  ALL_DVDS_RELEASE_DETAIL_BY_PAGE,\n  SIZE_MAIN_DVDS\n} from \"../../services/dvds.service\";\nimport Pagination from \"../../components/UI/Pagination/Pagination\";\nimport DvdCard from \"../../components/Dvds/DvdCard\";\nimport DvdDetail from \"../../components/Dvds/DvdDetail\";\n\nimport { Pink, Orange, White } from \"../../themes/colors\";\nimport { center, fadeIn } from \"../../themes/styled\";\n\nconst Container = styled.div`\n  position: relative;\n  width: 100%;\n  height: calc(100vh - 100px);\n  overflow: auto;\n  box-sizing: border-box;\n\n  &::-webkit-scrollbar {\n    width: 6px;\n    background: transparent;\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: linear-gradient(${Orange}, ${Pink});\n    border-radius: 10px;\n  }\n`;\n\nconst DvdContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(14vw, 1fr));\n  gap: 10px;\n  padding: 50px 20px 30px;\n  box-sizing: border-box;\n`;\n\nconst DvdItem = styled.div`\n  ${center}\n  width: 15vw;\n  animation: ${fadeIn} 1s linear;\n`;\n\nconst PaginationContainer = styled.div`\n  ${center}\n  margin-bottom: 5px;\n`;\n\nconst NotFound = styled.div`\n  width: 100%;\n  height: 200px;\n  color: ${White};\n  ${center};\n  font-style: italic;\n`;\n\nfunction Dvds() {\n  const [page, setPage] = useState(1);\n  const [show, setShow] = useState(false);\n  const [data, setData] = useState(null);\n\n  const dvds = useMemo(() => ALL_DVDS_RELEASE_DETAIL_BY_PAGE(page, 30), [page]);\n\n  const handleChangePage = useCallback(page => {\n    setPage(page);\n  }, []);\n\n  const toggleModal = useCallback(() => {\n    setShow(!show);\n  }, [show]);\n\n  const handleChangeData = useCallback(\n    value => {\n      if (value) {\n        setData(value);\n      } else {\n        setData(null);\n      }\n      toggleModal();\n    },\n    [toggleModal]\n  );\n\n  return (\n    <Fragment>\n      <Container>\n        {SIZE_MAIN_DVDS === 0 ? (\n          <NotFound>Not Found</NotFound>\n        ) : (\n          <DvdContainer>\n            {dvds.map(item => (\n              <LazyLoad\n                key={item.code}\n                height={200}\n                once={true}\n                overflow={true}\n              >\n                <DvdItem>\n                  <DvdCard data={item} click={() => handleChangeData(item)} />\n                </DvdItem>\n              </LazyLoad>\n            ))}\n          </DvdContainer>\n        )}\n        <PaginationContainer>\n          <Pagination\n            count={SIZE_MAIN_DVDS}\n            page={page}\n            size={30}\n            handleChangePage={handleChangePage}\n          />\n        </PaginationContainer>\n      </Container>\n      <DvdDetail show={show} toggleModal={toggleModal} data={data} />\n    </Fragment>\n  );\n}\n\nexport default Dvds;\n"],"sourceRoot":""}